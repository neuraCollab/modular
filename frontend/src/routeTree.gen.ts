/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as BaseLayoutImport } from './routes/_base-layout'
import { Route as BaseLayoutIndexImport } from './routes/_base-layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutProfileImport } from './routes/_layout/profile'
import { Route as LayoutItemsImport } from './routes/_layout/items'
import { Route as LayoutFindPersonImport } from './routes/_layout/find-person'
import { Route as LayoutDashboardImport } from './routes/_layout/dashboard'
import { Route as LayoutAdminImport } from './routes/_layout/admin'
import { Route as LayoutProfileIdImport } from './routes/_layout/profile.$id'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const BaseLayoutRoute = BaseLayoutImport.update({
  id: '/_base-layout',
  getParentRoute: () => rootRoute,
} as any)

const BaseLayoutIndexRoute = BaseLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => BaseLayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProfileRoute = LayoutProfileImport.update({
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemsRoute = LayoutItemsImport.update({
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFindPersonRoute = LayoutFindPersonImport.update({
  path: '/find-person',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardRoute = LayoutDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProfileIdRoute = LayoutProfileIdImport.update({
  path: '/$id',
  getParentRoute: () => LayoutProfileRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_base-layout': {
      preLoaderRoute: typeof BaseLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard': {
      preLoaderRoute: typeof LayoutDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/find-person': {
      preLoaderRoute: typeof LayoutFindPersonImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/items': {
      preLoaderRoute: typeof LayoutItemsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/profile': {
      preLoaderRoute: typeof LayoutProfileImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_base-layout/': {
      preLoaderRoute: typeof BaseLayoutIndexImport
      parentRoute: typeof BaseLayoutImport
    }
    '/_layout/profile/$id': {
      preLoaderRoute: typeof LayoutProfileIdImport
      parentRoute: typeof LayoutProfileImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  BaseLayoutRoute.addChildren([BaseLayoutIndexRoute]),
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutDashboardRoute,
    LayoutFindPersonRoute,
    LayoutItemsRoute,
    LayoutProfileRoute.addChildren([LayoutProfileIdRoute]),
    LayoutSettingsRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
